#+setupfile: /home/yamagami/org/macros-org/org-macros.setup
# Time-stamp: <2023-03-21 10:27:27 yamagami>
#+title: PostgreSQL住所録
#+date: [2023-03-21]
#+language: ja
#+link: file file+sys:../static/
#+hugo_base_dir: ~/peace-blog/bingo/
#+hugo_section: posts
#+hugo_tags: PostgreSQL 住所録
#+hugo_categories: comp
#+options: toc:nil
#+draft: false

* 概要
携帯電話（ガラケー）、Google Contacts、年賀状ソフト（筆王）など、あちこちに散在している氏名・連絡先データを「名寄せ」して一本化し、PostgreSQLのテーブルにしてちゃんと管理・運用してみようという企画。

データ件数は500件ほどです。小規模で個人的な住所録の整理整頓した作業メモです。

* 方針
1. 出来上がったPostgreSQLターブルからのデータ抽出をどうするかの方針を立てる
2. 各種の氏名・連絡先データをCSVデータとしてエクスポート
3. それぞれのCSVをクリーニング、整列、整形
4. PostgreSQLのインストールと初期設定
5. 一本化したCSVをPostgreSQLにエキスポート
6. 検索・結果表示のフロントエンドをBashスクリプト化する

* まずは検索サンプル
ごく簡単な検索・結果表示スクリプト  
**./contacts-search.sh** を起動します。引数としてクエリ語（姓名、姓または名の一部）を入力。第1検索の結果表示は（当面）次の3情報です。
#+begin_example
姓名（漢字）、Emailアドレスx1、電話番号x2
#+end_example
その下にさらに第2検索をやるかどうかのプロンプトが表示されます。
#+begin_example
,** Wanna more infos? (a)ddress, (e)mails, (p)hones,  (r)e-select or (q)uit : 
#+end_example
**re-select** を選ぶと別の検索に移れます。

** サンプル画面
#+begin_export html
<div align=center><img src="https://dl.dropboxusercontent.com/s/pk7jglvd538mckm/contacts-search-sample-1.png" alt="" width="100%"></div>
#+end_export

** 感想文
取りかかった当初は、たかが住所録、1週間もあれば余裕で終わると思っていました。しかし甘かった。

第一にハマったのはデータの洗浄・加工・整形。重複があるし、新旧が不明だし、タイポもある。また半角カタカナが混じっていたり、ダブルクオートでくくってあったり・・・。とんでもないカオスでした。

最大の問題は、日本語表記法の多様性というかブレの大きさ。そもそも、クエリ語を漢字、ひらがな、カタカナ、ローマ字のどれにすべきかで悩み、いろいろ試行錯誤しました。最終的には、ヘボン式ローマ字を使うことにしました。それには表記ブレのない姓名ローマ字表記が前提になります。

今回は大きな流れとしては次のようにしてローマ字姓名データを作りました。
1. 姓名漢字から仮名読みデータをつくる(gmigemo)
2. かな読みをヘボンローマ字に変換する(uconv)
3. さらに細かくローマ字表記法を調整する(sed)

このローマ字姓名データを検索キーとしたPostgreSQL検索をBashスクリプト内に埋め込むことで、ターミナルから住所情報検索が簡単にできるようになりました。

姓名、姓または名（の一部でも可）をローマ字入力すると、あいまい検索の結果を得ます。
1. まずはメールアドレスと電話番号を2つずつ表示する
2. さらに詳細情報が必要ならば、
   「メールアドレス（最大5件）、電話番号（最大5件）、郵便番号と住所」
　を選択表示できます。

原データのCSVテーブル整形・作成はBashでコツコツやりました。明らかに不要だと思われるデータは削除して残ったデータ件数は約500件でした。この程度の件数でも、csvtoolとかが無ければシェルスクリプトでやるのは無理だったと思います。

データがいったんPostgreSQL内におさまれば、あとの操作（編集、追加、削除など）はPostgreSQL内で楽にできます。やれやれ！です。




* contacts-search.sh


* 段取り
** インストール
- apt install

** ログインと基本操作
- セミコロンを忘れずに！
- 改行はignoreされる
- コマンドのアルファベットは大文字、小文字は無視される
- \q and exit

** テーブル作成
- CSVファイルのデータテーブルを作る
  - 作る道具は何でもOK（Excel,emacs,Libreoffice...)
- テーブル名を決める (mytable)
- カラムの名前＝ヘッダーをつける (順番はともかくよく考えて！）
   - 略字にしない（あとでASでエリアスを作れる）
   - アルファベット
   - スペース、ハイフンは使わない
   - 大文字も使わない etc
- カラムのデータタイプを決める
  - 電話番号や郵便番号はnumericにせずvarcharにする(アタマに0が来るとX）
  - 空にできないカラムはNOT NULLにする
- \COPYをつかう　
  - フルパスにする
  - permissionでこけることがある（親DIRは　drwxr-xr-x）
** 確認作業
- `SELECT *`してみる
``` sql
contacts=#SELECT * FROM mytable; 
contacts=# select * from contacts;
```
これで全カラムが入っていればOK。

** おわり

** 補足

- 電話番号は固定電話か携帯電話かは、sedで区別可能なので分ける必要はない
- Emailアドレスもカラムで指定しなくても、全部のデータ行の中から、sedで抽出できる
- 郵便番号から住所１は抽出できるので、別にその変換機能をプログラム化してあれば、住所１は不要
- 住所３（アパート部屋番号）などは必要なら追加すればよい
- クエリの利便を考えると、ローマ字のフルネームカラムがよい。曖昧検索で
`WHERE latin_fullname ~ 'suzuki ho'`のようになクエリが可能になる。
- 件数の多い住所録だと姓と名とで別々に検索する方がよい。其の際には`WHERE family_name = 'suzuki' || given_name = 'taro'`のようにすることになる。
- カラムはあとで随時 追加可能。たとえば旧姓(maiden_name　＋maiden_name_yomi) なら
``` sql
ALTER TABLE mytable ADD COLUMN maiden_name varchar; 
```
- 其のカラムにデータ(田中花子さんの旧姓＝佐藤)を追加するには次のようにする：
``` sql
UPDATE mytable SET maiden_name='佐藤',maiden_name_yomi='sato' WHERE latin_fullname='tanaka hanako'; 
```




*  SNSメモ
2023/03/18 16:42:02




# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:
