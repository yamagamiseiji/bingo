<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
<head>
<!-- 2023-01-18 水 15:15 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Ledger-cliのアカウント構造を樹状図にする</title>
<meta name="author" content="YAMAGAMI" />
<meta name="generator" content="Org Mode" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<script type="text/javascript">
// @license magnet:?xt=urn:btih:e95b018ef3580986a04669f1b5879592219e2a7a&dn=public-domain.txt Public Domain
<!--/*--><![CDATA[/*><!--*/
     function CodeHighlightOn(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.add("code-highlighted");
         target.classList.add("code-highlighted");
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.remove("code-highlighted");
         target.classList.remove("code-highlighted");
       }
     }
    /*]]>*///-->
// @license-end
</script>
</head>
<body>
<div id="content">
<h1 class="title">Ledger-cliのアカウント構造を樹状図にする</h1>
<p>
2023年の新年早々、ふとしたことから こんな図が必要になりました。
</p>

<div id="org886ce40" class="figure">
<p><img src="../static/1st-sample.png" alt="1st-sample.png" width="70%" />
</p>
</div>


<p>
要するに <b><b>ledger-cli</b></b> のアカウント（勘定科目）構造を <b><b>樹状図</b></b> にするということ。
</p>

<p>
もしかしたらledger-cliに備え付けのコマンドとかオプションがあるかもしれないと思い検索してみましたが見当たりません。
</p>

<p>
そこで この樹状図を書く方法を数日前から考えていました。基本的な考え方は：
</p>
<ul class="org-ul">
<li>アカウント一覧を表示するledger-cliの <b><b>accounts</b></b> を使う</li>
<li>表示されたアカウント構造を <b><b>mkdir</b></b> してディレクトリ構造にする</li>
<li>それを <b><b>treeコマンド</b></b><sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup> を使って表示する</li>
</ul>

<p>
途中で変なところではまったりして一時混乱していましたが、最終的には
</p>
<ul class="org-ul">
<li>Ledgerの <b><b>accounts</b></b> コマンドの出力を1行ずつ読む</li>
<li>各行ごとにコロンをスラッシュに変換する</li>
<li>それを配列か何かに格納しておいて <b><b>mkdir -p</b></b> する</li>
</ul>

<p>
という方針を採用しました。
</p>

<div id="outline-container-org59fa80d" class="outline-2">
<h2 id="org59fa80d"><span class="section-number-2">1</span> コード</h2>
<div class="outline-text-2" id="text-1">
<p>
アイデア的には
</p>
<ul class="org-ul">
<li>任意の場所に <b><b>ACCOUNT</b></b> という親ディレクトリを作る</li>
<li>その配下にサブアカウント（下位勘定科目）名のサブディレクトリを作る</li>
<li>Ledger-cliの標準的な引数をそのまま流用して樹状図に書き出す範囲を絞り込む</li>
<li><b><b>tree</b></b> を使って樹状図を書く</li>
</ul>
<p>
というもの。
</p>
<div class="org-src-container">
<pre class="src src-sh"><span style="color: #8D8D84;">#</span><span style="color: #8D8D84; font-style: italic;">!/bin/</span><span style="color: #0000FF;">bash</span>
<span style="color: #8D8D84;">#  </span><span style="color: #8D8D84; font-style: italic;">Ledger&#12398;A/C&#27083;&#36896;&#12434;&#27193;&#29366;&#22259;&#12395;&#12377;&#12427;&#12473;&#12463;&#12522;&#12503;&#12488;</span>
<span style="color: #8D8D84;">#  </span><span style="color: #8D8D84; font-style: italic;">Ledger&#12398;&#12497;&#12521;&#12513;&#12540;&#12479;&#12364;&#12381;&#12398;&#12414;&#12414;&#20351;&#12360;&#12427;</span>

<span style="color: #BA36A5;">base_dir</span>=<span style="color: #008000;">"/home/yamagami/local-ledger-directory/test-arena/tree-diagram-drawing"</span>

<span style="color: #8D8D84;">## </span><span style="color: #8D8D84; font-style: italic;">&#24341;&#25968;&#25991;&#23383;&#21015;&#21463;&#12369;</span>
<span style="color: #0000FF;">if</span> [ $<span style="color: #BA36A5;">#</span> = 0 ]; <span style="color: #0000FF;">then</span>
    <span style="color: #006FE0;">echo</span> <span style="color: #008000;">"WARNING: Ledger&#12398;&#12458;&#12503;&#12471;&#12519;&#12531;&#12364;&#20351;&#12360;&#12414;&#12377;"</span>
    <span style="color: #006FE0;">echo</span> <span style="color: #008000;">"         &#24341;&#25968;&#12394;&#12375;&#12384;&#12392;&#27193;&#29366;&#22259;&#12364;&#38263;&#22823;&#12395;&#12394;&#12426;&#12414;&#12377;"</span>
    <span style="color: #006FE0;">read</span> -n 1 -r -p <span style="color: #008000;">"&#24341;&#25968;&#12391;&#32094;&#12426;&#12371;&#12415;&#12414;&#12377;&#12363;&#65311; [y/n] : "</span> yn
    <span style="color: #0000FF;">case</span> <span style="color: #008000;">"${yn}"</span><span style="color: #0000FF;"> in</span>
        Y|y) <span style="color: #006FE0;">echo</span> -e
             <span style="color: #006FE0;">read</span> -r -p <span style="color: #008000;">"ledger --acounts &#12458;&#12503;&#12471;&#12519;&#12531; : "</span> param ;;
        *) : ;;
    <span style="color: #0000FF;">esac</span>
<span style="color: #0000FF;">else</span>
    <span style="color: #BA36A5;">param</span>=$<span style="color: #BA36A5;">*</span>
<span style="color: #0000FF;">fi</span>

<span style="color: #8D8D84;">## </span><span style="color: #8D8D84; font-style: italic;">&#20837;&#21147;&#12373;&#12428;&#12383;&#24341;&#25968;&#12395;"--depth n"&#12364;&#12354;&#12427;&#22580;&#21512;</span>
<span style="color: #8D8D84;">#  </span><span style="color: #8D8D84; font-style: italic;">&#12381;&#12428;&#12434;&#21066;&#38500;&#12375;&#12390;&#12289;n&#12434;tree&#34920;&#31034;&#26178;&#12398; tree -L &#12395;&#39135;&#12431;&#12379;&#12427;</span>
<span style="color: #0000FF;">if</span> [[ -n $(<span style="color: #FF1493;">echo</span> <span style="color: #008000;">"${param}"</span> | grep <span style="color: #008000;">'\--depth'</span>) ]]; <span style="color: #0000FF;">then</span>
    <span style="color: #BA36A5;">depth_level</span>=$(<span style="color: #FF1493;">echo</span> ${<span style="color: #BA36A5;">param</span>}<span style="color: #008000;">\</span>
             | sed -e <span style="color: #008000;">"s/.*--depth \([0-9]*\).*/\1/"</span>)
    <span style="color: #BA36A5;">str_to_delete</span>=<span style="color: #008000;">"--depth ${depth_level}"</span>
    <span style="color: #BA36A5;">param</span>=$(<span style="color: #FF1493;">echo</span> <span style="color: #008000;">"${param}"</span> | sed -e <span style="color: #008000;">"s/${str_to_delete}//g"</span> )
<span style="color: #0000FF;">else</span>
    <span style="color: #BA36A5;">depth_level</span>=<span style="color: #008000;">"0"</span>
<span style="color: #0000FF;">fi</span>

<span style="color: #8D8D84;">## </span><span style="color: #8D8D84; font-style: italic;">accounts.dat &#12434;&#20316;&#12427;</span>
ledger accounts ${<span style="color: #BA36A5;">param</span>} --count<span style="color: #008000;">\</span>
       &gt; ${<span style="color: #BA36A5;">base_dir</span>}/accounts.dat

awk -i inplace  -F<span style="color: #008000;">" "</span> <span style="color: #008000;">'{print $2}'</span> ${<span style="color: #BA36A5;">base_dir</span>}/accounts.dat

<span style="color: #8D8D84;">## </span><span style="color: #8D8D84; font-style: italic;">&#12371;&#12371;&#12363;&#12425;&#26412;&#20307;</span>
<span style="color: #8D8D84;">#   </span><span style="color: #8D8D84; font-style: italic;">&#12522;&#12475;&#12483;&#12488; ACCOUNT</span>
<span style="color: #006FE0;">cd</span> ${<span style="color: #BA36A5;">base_dir</span>} || <span style="color: #0000FF;">exit</span> 0
rm -rf ACCOUNT/
mkdir -p ACCOUNT
<span style="color: #006FE0;">cd</span> ACCOUNT || <span style="color: #0000FF;">exit</span> 0
<span style="color: #8D8D84;">#   </span><span style="color: #8D8D84; font-style: italic;">&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;&#12289;&#12469;&#12502;&#12487;&#12451;&#12524;&#12463;&#12488;&#12522;&#12434;&#20316;&#12427;</span>
<span style="color: #0000FF;">while </span><span style="color: #006FE0;">read</span> -r line ; <span style="color: #0000FF;">do</span>
    <span style="color: #BA36A5;">dir_path</span>=$(<span style="color: #FF1493;">echo</span> $<span style="color: #BA36A5;">line</span> | sed -e <span style="color: #008000;">'s/:/\//g'</span>)
    mkdir -p <span style="color: #008000;">"${dir_path[@]}"</span>
<span style="color: #0000FF;">done</span> &lt; ${<span style="color: #BA36A5;">base_dir</span>}/accounts.dat

<span style="color: #8D8D84;">## </span><span style="color: #8D8D84; font-style: italic;">Tree &#20986;&#21147;</span>
<span style="color: #006FE0;">cd</span> ${<span style="color: #BA36A5;">base_dir</span>} || <span style="color: #0000FF;">exit</span> 0
<span style="color: #0000FF;">if</span> [[ <span style="color: #008000;">"${depth_level}"</span> = 0 ]]; <span style="color: #0000FF;">then</span>
    tree -d ACCOUNT
<span style="color: #0000FF;">else</span>
    tree -d ACCOUNT -L ${<span style="color: #BA36A5;">depth_level</span>}
<span style="color: #0000FF;">fi</span>
<span style="color: #0000FF;">exit</span> 0
</pre>
</div>
</div>

<div id="outline-container-org08b7cc0" class="outline-3">
<h3 id="org08b7cc0"><span class="section-number-3">1.1</span> 補足説明</h3>
<div class="outline-text-3" id="text-1-1">
<p>
とても短く簡単なスクリプトなのですが、つぎのコメントのあるパートについて補足説明をします。
</p>
<pre class="example" id="org797188d">
## 入力された引数に"--depth n"がある場合
#  それを削除して、nをtree表示時の tree -L に食わせる
</pre>
</div>
</div>

<div id="outline-container-org7a5f253" class="outline-3">
<h3 id="org7a5f253"><span class="section-number-3">1.2</span> ledger accounts の引数における &#x2013;depth の挙動</h3>
<div class="outline-text-3" id="text-1-2">
<p>
ledger accountsに引数をつけて起動するときに、引数に <b><b>&#x2013; depth</b></b> を加えると、ちょっと考えていたのとちがう結果になることに気づきました。
</p>

<p>
たとえば、
^assetsを2023年1月1日以降について <b><b>ledger accounts</b></b> すると次のようになります：
</p>
<div class="org-src-container">
<pre class="src src-sh">$ ledger accounts ^assets -b 2023/01/10
</pre>
</div>

<pre class="example">
Assets:Bank:boy:chk
Assets:Bank:yucho:sogo:hinako
Assets:Cash
Assets:Cash:hinako
Assets:Cash:小銭
Assets:Reimbursement
Assets:e-money:REG_coupon
Assets:e-money:nanaco:card_em:hinako
Assets:e-money:nanaco:card_pts:hinako
</pre>
<p>
これはOKですよね。1月10日から当日までに使った <b><b>Assests</b></b> アカウントがリストアップさます。ところがこれに <b><b>&#x2013;depth 2</b></b> を足しただけのクエリ：
</p>
<div class="org-src-container">
<pre class="src src-sh">$ led accounts ^assets -b 2023/01/10 --depth 2
</pre>
</div>
<p>
これをやると結果は次のようになります：
</p>
<pre class="example">
Assets:Cash
Assets:Reimbursement
</pre>

<p>
あらら！　ですよね、これはまずい。
</p>

<p>
どういうことかというと、1月10日以降、今日までに使用したAssets（資産）アカウントの内、アカウントの深さ（depth）が <b><b>ちょうど2のアカウントだけ</b></b> リストされたということ。深さが3以上のアカウントはリストされません<sup><a id="fnr.2" class="footref" href="#fn.2">2</a></sup>。
</p>

<p>
期待していたのは、次のような結果です。
</p>
<pre class="example">
Assets:Bank
Assets:Cash
Assets:Reimbursement
Assets:e-money
</pre>
<p>
ということで、
&#x2013;depthオプションを、自分の期待に合わせた動きをしてくれるように小手先でちょっと変更しました。
</p>

<p>
ようするに：
</p>
<ul class="org-ul">
<li>&#x2013;depth n が引数に含まれていたら、それを削除する</li>
<li>n は　tree コマンドの引数として、-L n のようにして使う<sup><a id="fnr.3" class="footref" href="#fn.3">3</a></sup></li>
<li>そのことで外見上、アカウント階層の深さが指定されたとおりに見える</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org276b53a" class="outline-2">
<h2 id="org276b53a"><span class="section-number-2">2</span> サンプル出力</h2>
<div class="outline-text-2" id="text-2">
</div>
<div id="outline-container-orgdff09a5" class="outline-4">
<h4 id="orgdff09a5"><span class="section-number-4">2.0.1</span> １. 引数なしで起動したとき</h4>
<div class="outline-text-4" id="text-2-0-1">
<div class="org-src-container">
<pre class="src src-sh">$ tree-it.sh
</pre>
</div>

<div id="org60e0253" class="figure">
<p><img src="../static/no-params.png" alt="no-params.png" width="70%" />
</p>
</div>

<p>
ここで <b><b>n</b></b> を選んで <b><b>絞り込み無し</b></b> にすると、全期間にわたって全アカウントが全深度について表示されます。情報量が多すぎてとても使い物になりません。
</p>

<p>
したがって基本的には、次の例のように起動時に引数で <b><b>絞りこみ</b></b> をする使い方になります。
</p>
</div>
</div>

<div id="outline-container-org6bc5674" class="outline-4">
<h4 id="org6bc5674"><span class="section-number-4">2.0.2</span> ２. 引数つきで起動した例１</h4>
<div class="outline-text-4" id="text-2-0-2">
<p>
期間を2022/12/01からに指定し、アカウント深度２で「支出 or 資産 or 負債」で絞り込んだ例：
</p>
<div class="org-src-container">
<pre class="src src-sh">$ tree-it.sh ^assets or ^liab -b 2022/12/01 --depth 2
</pre>
</div>

<div id="org96b3ea2" class="figure">
<p><img src="../static/tree-fig2.png" alt="tree-fig2.png" width="70%" />
</p>
</div>
</div>
</div>

<div id="outline-container-org151acf5" class="outline-4">
<h4 id="org151acf5"><span class="section-number-4">2.0.3</span> ３. 引数つきで起動した例２</h4>
<div class="outline-text-4" id="text-2-0-3">
<p>
期間を2022/06/01からに指定し、支出の中で外食(Meals) と 食料品(Grocery）をアカウント深度５で絞り込んだ例：
</p>
<div class="org-src-container">
<pre class="src src-sh">$ tree-it.sh ^Expenses and <span style="color: #008000;">\(</span> meals or grocery <span style="color: #008000;">\)</span> --depth 5 -b 2022/06/01
</pre>
</div>

<div id="orga5ea3fe" class="figure">
<p><img src="../static/grc-and-meal.png" alt="grc-and-meal.png" width="70%" />
</p>
</div>
</div>
</div>
</div>


<div id="outline-container-orgf305b0c" class="outline-2">
<h2 id="orgf305b0c"><span class="section-number-2">3</span> 今後の展望など</h2>
<div class="outline-text-2" id="text-3">
<p>
<b><b>tree-it.sh</b></b> では、Ledgerの <b><b>accounts</b></b> コマンドで <b><b>&#x2013;count</b></b> オプションをつけています。これを使うと、クエリされたアカウントの出現頻度が得られますので、出現頻度で絞りこんでアカウントの樹状図を書くことができます。
</p>

<p>
このスクリプトでは、 <b><b>&#x2013;depth</b></b> を除いてほとんどの機能はledger-cliに <b><b>おんぶに抱っこ</b></b> 状態です。使えば使うほど、Ledger-cliの適用範囲の広さと奥深さを感じます。
</p>
</div>
</div>


<div id="outline-container-orgf89838e" class="outline-2">
<h2 id="orgf89838e"><span class="section-number-2">4</span> Footnotes:</h2>
<div class="outline-text-2" id="text-4">
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">&#33050;&#27880;: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
ubuntuには標準ではインストールされていないので apt install tree します。
</p></div></div>

<div class="footdef"><sup><a id="fn.2" class="footnum" href="#fnr.2">2</a></sup> <div class="footpara"><p class="footpara">
この仕様はよく考えてみれば理由があるにはありますが、自分の視点の素朴な予想と異なっていただけと言えます。
</p></div></div>

<div class="footdef"><sup><a id="fn.3" class="footnum" href="#fnr.3">3</a></sup> <div class="footpara"><p class="footpara">
treeコマンドでは -L オプションによって、ディレクトリ階層の「深さ」、つまり表示するディレクトリの深さを指定できます。
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<p class="date">&#26085;&#20184;: 2023-01-17 火 00:00</p>
<p class="author">&#33879;&#32773;: YAMAGAMI</p>
<p class="date">Created: 2023-01-18 水 15:15</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
