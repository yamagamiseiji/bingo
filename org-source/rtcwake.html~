<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
<head>
<!-- 2021-12-21 火 11:42 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>rtcwake+cronでノートPCを定時にオンオフする</title>
<meta name="author" content="YAMAGAMI" />
<meta name="generator" content="Org Mode" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<script type="text/javascript">
// @license magnet:?xt=urn:btih:e95b018ef3580986a04669f1b5879592219e2a7a&dn=public-domain.txt Public Domain
<!--/*--><![CDATA[/*><!--*/
     function CodeHighlightOn(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.add("code-highlighted");
         target.classList.add("code-highlighted");
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.remove("code-highlighted");
         target.classList.remove("code-highlighted");
       }
     }
    /*]]>*///-->
// @license-end
</script>
</head>
<body>
<div id="content">
<h1 class="title">rtcwake+cronでノートPCを定時にオンオフする</h1>
<p>
ここでは ノートPCを定時にオン・オフする方法、つまり：
</p>
<pre class="example" id="org4d3cf67">
毎日一定の時刻にPCを立ち上げ
特定のプログラムを走らせ
終わったら電源をオフにする
</pre>
<p>
方法を 自分向けのメモをかねて紹介します。
</p>


<p>
ここで「特定のプログラム」のイメージとしては
</p>
<ol class="org-ol">
<li>為替レートや株価などを自動取得<sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>するとか、銀行から入出金明細書のCSVファイルをダウンロードするなどの <b>会計・経理的</b> なプログラム</li>
<li>PCに接続されているウエッブカメラで畑の作物や花壇の花の成長を記録するなどの <b>定時監視的</b> なプログラム<br /></li>
</ol>
<p>
などがあります。
</p>

<p>
PCの電源を入れっぱなしにできるのであれば、
crontabに書き込むだけで定時にプログラムを走らせることができます。
</p>

<p>
しかし、１日にわずかな時間だけ動かすプログラムのためにパソコンの電源を24時間入れっぱなしにするのはとても不経済です。
</p>

<p>
最近になって偶然
<code>rtcwake</code> というコマンドの存在を知りました。これ
を使えば、BIOSに復帰時間を設定する機能がない型落ちのノートPCでも、
電源のオン・オフを制御しながら 会計・経理的プログラムも定時監視的プログラムも
定時・自動取得が可能です。省エネと電気代の節約につながります。
</p>

<div id="outline-container-org9c22e8c" class="outline-3">
<h3 id="org9c22e8c"><span class="section-number-3">0.1</span> 動作環境</h3>
<div class="outline-text-3" id="text-0-1">
<p>
ハードウエアは型落ちの中古ノートPC＝ <b>ThinkPad X230</b> <sup><a id="fnr.2" class="footref" href="#fn.2">2</a></sup>。
</p>
<pre class="example" id="orgba5325b">
CPU: Intel(R) Core(TM) i5-3320M CPU @ 2.60GHz
DISK: 168G SSD
MEM: 8GB
</pre>
<p>
OSは <b>Ubuntu 18.04.6 LTS</b> です。
</p>
</div>
</div>

<div id="outline-container-orge408548" class="outline-2">
<h2 id="orge408548"><span class="section-number-2">1</span> cron＋rtcwakeによる電源のオン・オフ管理</h2>
<div class="outline-text-2" id="text-1">
<p>
ノートPCをサーバー的に運用する際に、
フタを開けたままだとキーボードにホコリがたまるし、場所ふさぎで <b>じゃま</b> です。そこで何はともあれ フタを閉めてもノートPCがスリープしない設定をしておきます。
</p>

<p>
設定方法は<a href="#lid">補足資料1（ノートPCのフタを閉じてもスリープさせない設定）</a> を見てください。
</p>
</div>

<div id="outline-container-orgbd45984" class="outline-3">
<h3 id="orgbd45984"><span class="section-number-3">1.1</span> イベントのスケジュール</h3>
<div class="outline-text-3" id="text-1-1">
<p>
表<a href="#orgd1fb78d">1</a>のようなスケジュールでノートPCの電源をオン・オフし、プログラムを起動するケースを例にとって説明します。
</p>
<table id="orgd1fb78d" border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption class="t-above"><span class="table-number">&#34920;1:</span> PC電源の定時オンオフとプログラム実行のスケジュール例</caption>

<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">時刻</th>
<th scope="col" class="org-left">電源状態</th>
<th scope="col" class="org-left">備考</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">21:00</td>
<td class="org-left">ONにする</td>
<td class="org-left">前日の21:10に自動復帰時刻が予約してある</td>
</tr>

<tr>
<td class="org-left">21:05</td>
<td class="org-left">ON状態</td>
<td class="org-left">当日の株価（終値）を取得</td>
</tr>

<tr>
<td class="org-left">21:10</td>
<td class="org-left">ONからスリープへ</td>
<td class="org-left">翌日21:00の自動復帰を予約してスリープ(S3)させる</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-org490579f" class="outline-3">
<h3 id="org490579f"><span class="section-number-3">1.2</span> crontabの設定</h3>
<div class="outline-text-3" id="text-1-2">
<p>
<code>rtcwake</code> は <b>スーパーユーザ</b> で操作することが必要です。 <code>$ sudo su</code> してから <code># crontab -e</code> でcrontabを編集します。
</p>
</div>

<div id="outline-container-org0f8536c" class="outline-4">
<h4 id="org0f8536c"><span class="section-number-4">1.2.1</span> crontab（スーパーユーザ）</h4>
<div class="outline-text-4" id="text-1-2-1">
<pre class="example">
10 21 * * * /usr/sbin/rtcwake -m mem -t "$(date +\%s -d 'tomorrow 21:00')"
</pre>
<ul class="org-ul">
<li><code>rtcwake</code> で、自動復帰時刻を曜日に関わらず翌日の 21:00 分に設定</li>
</ul>
</div>
</div>

<div id="outline-container-org23bf435" class="outline-4">
<h4 id="org23bf435"><span class="section-number-4">1.2.2</span> crontab（一般ユーザ）</h4>
<div class="outline-text-4" id="text-1-2-2">
<pre class="example">
05 21 * * 1-5 /MyHomeDir/bin/fetch-stock-prices.sh
</pre>
<ul class="org-ul">
<li>曜日の項を <code>1-5</code> にして月曜日から金曜日までの間だけ起動させます。 <code>fetch-stock-prices.sh</code> は持ち株の終値取得のスクリプト<sup><a id="fnr.1.100" class="footref" href="#fn.1">1</a></sup>です。</li>
</ul>
</div>
</div>
</div>
</div>

<div id="outline-container-orgd7505b7" class="outline-2">
<h2 id="orgd7505b7"><span class="section-number-2">2</span> <code>rtcwake</code> の説明</h2>
<div class="outline-text-2" id="text-2">
<p>
上の例にそって <code>rtcwake</code> コマンドの基本的な設定について説明します。
</p>
</div>
<div id="outline-container-orga3de223" class="outline-3">
<h3 id="orga3de223"><span class="section-number-3">2.1</span> モード設定</h3>
<div class="outline-text-3" id="text-2-1">
<pre class="example" id="org6a75009">
-m mem
</pre>
<p>
モードを <b>mem</b> にします。
<code>rtcwake</code> のモードと <b>ACPI</b> の6段階( <b>S0</b> から <b>S5</b> )との対応関係は次のようになっています。( )内が <code>rtcwake</code> の <code>-m</code> 指定語です。
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">ACPI</th>
<th scope="col" class="org-left">内容</th>
<th scope="col" class="org-left"><code>rtcwake</code></th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left"><b>S0</b></td>
<td class="org-left">通常の稼働状態</td>
<td class="org-left"><b>on</b></td>
</tr>

<tr>
<td class="org-left"><b>S1</b></td>
<td class="org-left">スタンバイで通電したまま動作を停止</td>
<td class="org-left"><b>standby</b></td>
</tr>

<tr>
<td class="org-left"><b>S2</b></td>
<td class="org-left">スタンバイとスリープの中間状態</td>
<td class="org-left"><b>freeze</b> ?</td>
</tr>

<tr>
<td class="org-left"><b>S3</b></td>
<td class="org-left">RAM以外の電源を落とすスリープ</td>
<td class="org-left"><b>mem</b></td>
</tr>

<tr>
<td class="org-left"><b>S4</b></td>
<td class="org-left">メモリの内容をDiSKに退避して電源を切る</td>
<td class="org-left"><b>disk</b></td>
</tr>

<tr>
<td class="org-left"><b>S5</b></td>
<td class="org-left">完全な電源オフ（シャットダウン）</td>
<td class="org-left"><b>off</b></td>
</tr>
</tbody>
</table>
<p>
一般にS0からS5に向かって節電の程度が大きくなります。
</p>

<p>
省エネ的にはモードをoffにして（ <code>-m off</code> )
完全にシャットダウンしておくのが一番ですが、PCによっては自動復帰しないことがあるようです（<a href="https://forum.openmediavault.org/index.php?thread/2713-guide-rtcwake-to-turn-off-on-your-nas-at-a-specific-time/">事例</a>）。
</p>

<p>
わが家の <b>X230</b> は、最初のテストでは動いていたのですが、１週間ほど試験運転をやっていたら、ときどき復帰しないことがありました。
</p>

<p>
そこで 節電効果の大きい順（disk &gt;  mem &gt; freeze&#x2026;）に自動復帰テストをしてみました。そうすると <code>disk</code> でも自動復帰しない現象が発生しましたので、現在は <code>mem</code> で運用しています。 <code>mem</code> はいまのところ正常に動いています。 <code>-m mem</code> でも節電率は90%ほどになりますし、復帰の <b>スピード</b> が速いので、まぁ良しとしています。
</p>
</div>
</div>


<div id="outline-container-org06f696c" class="outline-3">
<h3 id="org06f696c"><span class="section-number-3">2.2</span> <code>rtcwake</code> による自動復帰の日時指定方法</h3>
<div class="outline-text-3" id="text-2-2">
<pre class="example" id="org16935a1">
-t "$(date +\%s -d 'tomorrow 21:00')"
</pre>
<p>
このようにUnixの <code>date</code> コマンドのフォーマットで自動復帰の日時を指定します。 <code>+%s</code> のパーセント記号を <code>+\%s</code> とエスケープすることを忘れずに。
</p>

<p>
なお <code>--date 21:00</code> のような指定も可能です。マニュアルにはよれば次のような使い方ができると書いてあります。
</p>
<pre class="example" id="orgd8cfcce">
YYYYMMDDhhmmss
YYYY-MM-DD hh:mm:ss
YYYY-MM-DD hh:mm    秒＝00 に設定
YYY-MM-DD           時刻＝00:00:00 に設定
hh:mm:ss            日付＝今日 に設定
hh:mm               日付＝今日、秒＝00 に設定
tomorrow            時刻＝00:00:00 に設定
</pre>
<p>
<code>rtcwake</code> には この他にも多数のオプションや機能があります。豊富な情報がネット上にありますので、詳しくはそれらを見てください。
</p>
</div>
</div>

<div id="outline-container-org8069a74" class="outline-3">
<h3 id="org8069a74"><span class="section-number-3">2.3</span> rtcwakeの状態確認やデバッグ</h3>
<div class="outline-text-3" id="text-2-3">
<p>
<code>rtcwake</code> の状態を確認したり、停止したりする方法は次のとおりです。
</p>
<pre class="example" id="orgf6372db">
（rtcwakeの状態を表示する）
$ sudo rtcwake -m show

（rtcwakeを停止する）
$ sudo rtcwake -m disable
</pre>
<p>
<code>rtcwake</code> の動作確認やデバッグの際には、
<code>-m no</code> とすれば、
<code>rtcwake</code> コマンド実行時に電源はオフにならず、PCはそのまま起動中になります。
必要な作業が終わった後で手動で電源をオフにしても、 <code>rtcwake</code> で予約設定した自動復帰の時刻になれば、ちゃんとPCは復帰します。
</p>
</div>
</div>
</div>


<div id="outline-container-org050fbba" class="outline-2">
<h2 id="org050fbba"><span class="section-number-2">3</span> 祝日の取り扱い</h2>
<div class="outline-text-2" id="text-3">
<p>
上述したように、土日に株価取得スクリプトを起動させないようにするために <code>crontab</code> で週日を <code>1-5</code> 指定しました。
</p>
</div>

<div id="outline-container-orgbba63f1" class="outline-3">
<h3 id="orgbba63f1"><span class="section-number-3">3.1</span> 祝日には株価取得しない</h3>
<div class="outline-text-3" id="text-3-1">
<p>
あとの問題は 曜日は平日なのに休業になる <b>祝日</b> の取扱い。
</p>

<p>
スクリプトは曜日が平日にも起動してきますので、「祝日」の判定は株価取得スクリプトの <b>内部</b> で行います。
</p>
</div>
</div>

<div id="outline-container-orgb557c0b" class="outline-3">
<h3 id="orgb557c0b"><span class="section-number-3">3.2</span> スクリプト内の祝日判定方法</h3>
<div class="outline-text-3" id="text-3-2">
<p>
内閣府のHPから「<a href="https://www8.cao.go.jp/chosei/shukujitsu/syukujitsu.csv">祝日データ</a>」をPCにダウンロードします。
データは1995年1月以降 2022年末までの祝日が次のようなCSVファイルになっています<sup><a id="fnr.3" class="footref" href="#fn.3">3</a></sup>。
</p>
<pre class="example">
 ：
2022/9/23,秋分の日
2022/10/10,スポーツの日
2022/11/3,文化の日
2022/11/23,勤労感謝の日
</pre>
<p>
これを <code>holidays.csv</code> とかのファイルに保存しておきます。
</p>

<p>
祝日かどうかの判定は、シンプルに <code>grep</code> を使って「当日の日付が祝日ファイルの中にあるかどうか」を見て行います。
</p>
</div>
</div>

<div id="outline-container-orgafc52db" class="outline-3">
<h3 id="orgafc52db"><span class="section-number-3">3.3</span> 日付フォーマットに注意</h3>
<div class="outline-text-3" id="text-3-3">
<p>
ちょっと気をつけなければならないのは、
内閣府のCSVデータでは、月日のデータは次のようにリーディングゼロの無い形式になっていること：
</p>
<pre class="example" id="orga5b2b87">
（例）2021/5/4,みどりの日
</pre>
<p>
したがって
</p>
<ol class="org-ol">
<li><p>
祝日ファイルの日付フォーマットを次のようにして <code>2021/05/04</code> の形式に変換するか
</p>
<pre class="example">
awk -F"," '{print $1}' holidays.csv | date -f - '+%Y/%m/%d'
</pre></li>
<li>判定の時に使う「今日の日付」のフォーマットを <code>date '%Y/%-m/%-d'</code> にして使うか</li>
</ol>
<p>
どちらかになります。
</p>
</div>
</div>

<div id="outline-container-orge8471c3" class="outline-3">
<h3 id="orge8471c3"><span class="section-number-3">3.4</span> 年末年始の休業日など</h3>
<div class="outline-text-3" id="text-3-4">
<p>
内閣府のデータに掲載されていない祝日や休業日は、手動で
次のように <code>holidays.dat</code> ファイル内に書き加えておきます。
</p>
<pre class="example">
2021/12/31,年末年始休業
2022/1/1,年末年始休業
2022/1/2,年末年始休業
2022/1/3,年末年始休業
</pre>
</div>
</div>
</div>

<div id="outline-container-org395eaea" class="outline-2">
<h2 id="org395eaea"><span class="section-number-2">4</span> <code>rtcwake+cron</code> の問題点など</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-org69f7794" class="outline-3">
<h3 id="org69f7794"><span class="section-number-3">4.1</span> <code>-m off</code> の不安定さ</h3>
<div class="outline-text-3" id="text-4-1">
<p>
<code>rtcwake</code> のマニュアルには <code>-m off</code> も「たいていの場合には動く」とあります。しかし安定的に自動復帰するかどうかは、PCごとにテストしてみることが必要です。
</p>

<p>
<code>-m mem</code> にすれば、おおかたのPCで問題なく自動復帰すると思います。
</p>
</div>
</div>

<div id="outline-container-orgdc89dba" class="outline-3">
<h3 id="orgdc89dba"><span class="section-number-3">4.2</span> <code>rtcwake</code> メッセージの分かりにくさ</h3>
<div class="outline-text-3" id="text-4-2">
<p>
<code>-m show</code> した例をあげます：
</p>
<pre class="example" id="orgbf1fa5b">
$ sudo rtcwake -m show
rtcwake: RTC が UTC を使用しているものと仮定します ...
アラーム: ON  Sat Dec 18 02:59:00 2021
</pre>
<p>
問題は、2行目。
</p>

<p>
これを見て、最初はディフォールトではローカル時間（JST)を使ってくれるはずなのに、なんで勝手に「UTCを使用しているものと仮定」するの？　3行目のアラーム時刻はUTCになってるし・・。もしかしたら自分の設定がまずかったかも知れないと焦りました。けど、英語のメッセージをみると：
</p>
<pre class="example" id="org0c2b695">
rtcwake: assuming RTC uses UTC …
</pre>
<p>
ですので、あぁ「仮定すると・・・」なんだね、とほっとしました :sweat:
</p>
</div>
</div>

<div id="outline-container-org069d5d9" class="outline-3">
<h3 id="org069d5d9"><span class="section-number-3">4.3</span> cronではまる</h3>
<div class="outline-text-3" id="text-4-3">
<p>
   cronで動かすことを想定して作っていないプログラムやスクリプトは、
ときどき（というかしばしば :sweat: ）
単独ではちゃんと動くのにcronでは動かないことが起こります。
</p>

<p>
これについても、たくさんの良い説明記事がネット上にありますので、そちらを見てください。<br />
（完）
</p>

<p>
<br />
</p>
</div>
</div>
</div>

<div id="outline-container-lid" class="outline-2">
<h2 id="lid"><span class="section-number-2">5</span> 補足説明1（ノートPCのフタを閉じてもスリープしない設定）</h2>
<div class="outline-text-2" id="text-lid">
<p>
フタを閉じてもパソコンをスリープさせない方法はつぎのとおりです。
</p>
</div>
<div id="outline-container-orgef51bf9" class="outline-3">
<h3 id="orgef51bf9"><span class="section-number-3">5.1</span> 1) 設定ファイルの編集</h3>
<div class="outline-text-3" id="text-5-1">
<p>
<code>/etc/systemd/logind.conf</code> の次の行を編集します：
</p>
<pre class="example">
＜デフォルト＞
HandleLidSwitch=suspend
＜変更後＞
HandleLidSwitch=ignore
</pre>
</div>
</div>
<div id="outline-container-orgaa4ca2b" class="outline-3">
<h3 id="orgaa4ca2b"><span class="section-number-3">5.2</span> 2) サービスを再起動</h3>
<div class="outline-text-3" id="text-5-2">
<pre class="example" id="org4e6a32f">
# systemctl restart systemd-logind.service
</pre>
<p>
これだけです。
</p>
</div>
</div>
</div>


<div id="outline-container-org7f35546" class="outline-2">
<h2 id="org7f35546"><span class="section-number-2">6</span> Footnotes:</h2>
<div class="outline-text-2" id="text-6">
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">&#33050;&#27880;: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
わが国では、ネットから自動的に株価や価額、為替レートなどのデータを取得するスクレーピングは多くのサイトで禁止されています。最近になって一部それを許容するサイトがわが国にも出始めていますが、いまのところ外国の公開サイトなどからのデータ取得に頼らざるを得ません。
</p></div></div>

<div class="footdef"><sup><a id="fn.2" class="footnum" href="#fnr.2">2</a></sup> <div class="footpara"><p class="footpara">
X230の発表年、出荷開始年は2013年です。
</p></div></div>

<div class="footdef"><sup><a id="fn.3" class="footnum" href="#fnr.3">3</a></sup> <div class="footpara"><p class="footpara">
2021年12月中旬の時点
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<p class="date">&#26085;&#20184;: [ 2021-12-20 ]</p>
<p class="author">&#33879;&#32773;: YAMAGAMI</p>
<p class="date">Created: 2021-12-21 火 11:42</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
