<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja">
<head>
<!-- 2022-05-26 木 21:16 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>registerレポートのカラム崩壊をなんとかする</title>
<meta name="author" content="YAMAGAMI" />
<meta name="generator" content="Org Mode" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<script type="text/javascript">
// @license magnet:?xt=urn:btih:e95b018ef3580986a04669f1b5879592219e2a7a&dn=public-domain.txt Public Domain
<!--/*--><![CDATA[/*><!--*/
     function CodeHighlightOn(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.add("code-highlighted");
         target.classList.add("code-highlighted");
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.remove("code-highlighted");
         target.classList.remove("code-highlighted");
       }
     }
    /*]]>*///-->
// @license-end
</script>
</head>
<body>
<div id="content">
<h1 class="title">registerレポートのカラム崩壊をなんとかする</h1>

<div id="outline-container-orgd056cfa" class="outline-2">
<h2 id="orgd056cfa"><span class="section-number-2">1</span> Ledger-cliは さいこーです・・・</h2>
<div class="outline-text-2" id="text-1">
<p>
Ledger-cliは John Wiegleyさんによって創られた
きわめて高機能・多機能なプレインテキストベースの複式簿記経理ソフト。
</p>



<p>
小規模ビジネスや団体、家庭の経理、研究費の管理などには
これ以上のものは無いと思います。神ソフトです。
とくにサイエンス系の人たちには「福音」ですね。
</p>

<p>
けれどもわが国ではユーザは多くないようです。
</p>

<p>
なぜでしょうか？
</p>

<p>
一つは、伝統的な「貸し方」「借り方」という概念を使わない複式簿記に馴染みがないからかも知れません。
</p>

<p>
もう一つの可能性は、
勘定科目（account）や支払先（payee）内に日本語とアルファベットが混在していると、そのregisterレポート出力がカラムが崩壊することに関係があるかもしれません。
</p>
</div>
</div>

<div id="outline-container-org34e1fa3" class="outline-2">
<h2 id="org34e1fa3"><span class="section-number-2">2</span> カラム崩壊</h2>
<div class="outline-text-2" id="text-2">
<p>
Ledger-cliは
</p>
<ul class="org-ul">
<li><code>"^expenses and cars"</code> のregisterレポートを書く例：</li>
</ul>
<pre class="example" id="orgdfa7dc8">
$ ledger reg ^expenses and cars -b 01/20\
   --format "%d %-40P %(ansify_if(justify(scrub(display_amount), 15,\
   15 + int(prepend_width), true, color)))\n"
</pre>
<ul class="org-ul">
<li>payeeがシングルバイト文字とマルチバイト文字が混在</li>
<li>こんな風になる Is file name okey?</li>
<li>マルチバイト文字を含まないアルファベットのみで構成されたトランザクションならば、完璧にカラムは整列します。</li>
<li>ところが、日本語、アルファベットが混在していると、次の図 <a href="#org83f51bd">1</a>のように残念な結果になります。</li>
</ul>


<div id="org83f51bd" class="figure">
<p><img src="../static/screenshot-ugly.png" alt="screenshot-ugly.png" width="90%" />
</p>
<p><span class="figure-number">&#22259;1:  </span>Ledger-cliの標準出力</p>
</div>
</div>



<div id="outline-container-orge02ba97" class="outline-3">
<h3 id="orge02ba97"><span class="section-number-3">2.1</span> せめてこんな感じにしたいわけです</h3>
<div class="outline-text-3" id="text-2-1">

<div id="org4601c6a" class="figure">
<p><img src="../static/screenshot-pp.png" alt="screenshot-pp.png" width="90%" />
</p>
<p><span class="figure-number">&#22259;2:  </span>カラム崩壊を抑えた出力のイメージ</p>
</div>

<p>
根本的な対策は手に余りますが、迂回的なやり方でなんとかなります<sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup>。
</p>
</div>
</div>
</div>

<div id="outline-container-orga0c9059" class="outline-2">
<h2 id="orga0c9059"><span class="section-number-2">3</span> 苦し紛れの迂回策</h2>
<div class="outline-text-2" id="text-3">
<p>
目的は、勘定科目名(account名)は表示せず、日付、支払先、金額の3項目だけをカラム崩壊なしで表示することにあります。
</p>

<p>
仕掛けはとても簡単です：
</p>
<blockquote>
<ul class="org-ul">
<li>date+payee(日付+支払先)を固定長にするための関数を用意する</li>
<li>固定長にされたdate+payeeの右側に、金額を右寄せにして表示する</li>
</ul>
</blockquote>
</div>

<div id="outline-container-orgc80b040" class="outline-3">
<h3 id="orgc80b040"><span class="section-number-3">3.1</span> カラム崩壊を抑える関数 dp-file<sub>justifier</sub></h3>
<div class="outline-text-3" id="text-3-1">
<p>
date,payeeファイルを右寄せするためのシンプルな関数です。
<a href="https://teratail.com/questions/70409">こちら</a>を参考にさせていただきました。
</p>
<pre class="example">
#!/bin/bash
# date,payeeファイル(dp-file)を行末にスペースを埋めて固定長にする関数
#   引数　1. 入力ファイル ./tmp-dp.txt　
#        2. 出力ファイル ./tmpt-fixed-dp-file.txt

function dp-file_justifier () {
    local CUTOUT_BYTES=40
    # tmp-payee.txtを一旦SJISに
    iconv -f UTF-8 -t SHIFT-JIS ./tmp-dp.txt\
       | cut -b 1-${CUTOUT_BYTES} \
       | iconv -f SHIFT-JIS -t UTF-8  &gt; ./tmp-fixed-dp.txt
}
</pre>
</div>
</div>
<div id="outline-container-orgfafed8b" class="outline-3">
<h3 id="orgfafed8b"><span class="section-number-3">3.2</span> 補足説明</h3>
<div class="outline-text-3" id="text-3-2">
<ul class="org-ul">
<li>関数内のローカル変数は <code>${CUTOUT_BYTES}</code> のみです</li>
<li>切り出しバイト数は支払先（payee）の文字長に応じて適宜、変更してください</li>
<li><code>./tmp-dp.txt, ./tmp-fixed-dp.txt</code> はグローバルな名前です</li>
</ul>
</div>
</div>

<div id="outline-container-org0568b77" class="outline-3">
<h3 id="org0568b77"><span class="section-number-3">3.3</span> 上の関数を呼び出す親スクリプト例</h3>
<div class="outline-text-3" id="text-3-3">
<pre class="example">
#!/bin/bash
set -eu
#
source  func-dp-file_justifier.sh
#　
from_date='2022/05/01'
to_date=$(date "+%Y/%m/%d")

# 日付(date)と支払先(payee)を取得し tmp-dp.txt へ保存
ledger reg ^expenses -b "${from_date}" -e "${to_date}"\
   --real --no-revalued\
   --format "%d %-40P\n"\
   -o ./tmp-dp.txt

# 関数コール（tmp-dp.txt から tmp-fixed-dp.txt を作る）
dp-file_justifier

# 金額amountを右寄せして tmp-amont.txt に保存
ledger reg ^expenses -b "${from_date}"  -e "${to_date}"\
   --no-revalued --real\
   --format "%(ansify_if(justify(scrub(display_amount), 15, 15 + int(prepend_width), true, color)))\n"\
   -o tmp-amount.txt
# pasteで date,payee,amount(dpa)のpretty printファイルを生成
paste -d" " ./tmp-fixed-dp.txt ./tmp-amount.txt\
   &gt; ./pretty-print-dpa.txt
exit 0
</pre>
</div>
</div>

<div id="outline-container-org90668dc" class="outline-3">
<h3 id="org90668dc"><span class="section-number-3">3.4</span> 補足説明</h3>
<div class="outline-text-3" id="text-3-4">
<ul class="org-ul">
<li><code>--real --no-revalued</code> オプションは、Ledgerファイルの中で、仮想アカウントを使用せず、VAT（消費税）などを自動転記で算出していない場合には不要。</li>
<li><code>justify</code> では。。。</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org59faecd" class="outline-2">
<h2 id="org59faecd"><span class="section-number-2">4</span> Ledger-cliは</h2>
</div>


<div id="outline-container-org12a0ca7" class="outline-2">
<h2 id="org12a0ca7"><span class="section-number-2">5</span> Footnotes:</h2>
<div class="outline-text-2" id="text-5">
</div>
</div>
<div id="footnotes">
<h2 class="footnotes">&#33050;&#27880;: </h2>
<div id="text-footnotes">

<div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> <div class="footpara"><p class="footpara">
UTFでは、バイト数と文字数が単純に対応してるわけではないので、この方法で常にすべてのトランザクションのカラムが整列するわけではありません。この方法では「ほぼほぼ」カラムが整列してくれることを目指しています。もし完璧を求めるならもっと大掛かりな仕掛けが必要だと思います。
</p></div></div>


</div>
</div></div>
<div id="postamble" class="status">
<p class="date">&#26085;&#20184;: 2022-05-26 木 00:00</p>
<p class="author">&#33879;&#32773;: YAMAGAMI</p>
<p class="date">Created: 2022-05-26 木 21:16</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
